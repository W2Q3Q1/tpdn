Traceback (most recent call last):
  File "model_trainer.py", line 168, in <module>
    encoder.load_state_dict(torch.load("models/encoder_" + file_prefix + ".weights", map_location=device))
  File "/software/apps/anaconda/5.2/python/3.6/envs/marcc-python3.6-pytorch0.4.1/lib/python3.5/site-packages/torch/serialization.py", line 356, in load
    f = open(f, 'rb')
FileNotFoundError: [Errno 2] No such file or directory: 'models/encoder_f10tpr_tree_ltr_rev_0.weights'
Traceback (most recent call last):
  File "model_trainer.py", line 168, in <module>
    encoder.load_state_dict(torch.load("models/encoder_" + file_prefix + ".weights", map_location=device))
  File "/software/apps/anaconda/5.2/python/3.6/envs/marcc-python3.6-pytorch0.4.1/lib/python3.5/site-packages/torch/serialization.py", line 356, in load
    f = open(f, 'rb')
FileNotFoundError: [Errno 2] No such file or directory: 'models/encoder_f50tpr_tree_ltr_rev_0.weights'
/scratch/users/rmccoy20@jhu.edu/tpdn_unbind/tpdn_refactored/models.py:244: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  output = self.softmax(self.out(output[0])) # Pass the result through softmax to make it probabilities
/scratch/users/rmccoy20@jhu.edu/tpdn_unbind/tpdn_refactored/training.py:158: UserWarning: invalid index of a 0-dim tensor. This will be an error in PyTorch 0.5. Use tensor.item() to convert a 0-dim tensor to a Python number
  if this_loss.data[0] < best_loss:
/scratch/users/rmccoy20@jhu.edu/tpdn_unbind/tpdn_refactored/models.py:244: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  output = self.softmax(self.out(output[0])) # Pass the result through softmax to make it probabilities
/scratch/users/rmccoy20@jhu.edu/tpdn_unbind/tpdn_refactored/training.py:158: UserWarning: invalid index of a 0-dim tensor. This will be an error in PyTorch 0.5. Use tensor.item() to convert a 0-dim tensor to a Python number
  if this_loss.data[0] < best_loss:
/scratch/users/rmccoy20@jhu.edu/tpdn_unbind/tpdn_refactored/models.py:244: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  output = self.softmax(self.out(output[0])) # Pass the result through softmax to make it probabilities
/scratch/users/rmccoy20@jhu.edu/tpdn_unbind/tpdn_refactored/training.py:158: UserWarning: invalid index of a 0-dim tensor. This will be an error in PyTorch 0.5. Use tensor.item() to convert a 0-dim tensor to a Python number
  if this_loss.data[0] < best_loss:
/scratch/users/rmccoy20@jhu.edu/tpdn_unbind/tpdn_refactored/models.py:244: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  output = self.softmax(self.out(output[0])) # Pass the result through softmax to make it probabilities
/scratch/users/rmccoy20@jhu.edu/tpdn_unbind/tpdn_refactored/training.py:158: UserWarning: invalid index of a 0-dim tensor. This will be an error in PyTorch 0.5. Use tensor.item() to convert a 0-dim tensor to a Python number
  if this_loss.data[0] < best_loss:
/scratch/users/rmccoy20@jhu.edu/tpdn_unbind/tpdn_refactored/models.py:244: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  output = self.softmax(self.out(output[0])) # Pass the result through softmax to make it probabilities
/scratch/users/rmccoy20@jhu.edu/tpdn_unbind/tpdn_refactored/training.py:158: UserWarning: invalid index of a 0-dim tensor. This will be an error in PyTorch 0.5. Use tensor.item() to convert a 0-dim tensor to a Python number
  if this_loss.data[0] < best_loss:
/scratch/users/rmccoy20@jhu.edu/tpdn_unbind/tpdn_refactored/models.py:244: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  output = self.softmax(self.out(output[0])) # Pass the result through softmax to make it probabilities
/scratch/users/rmccoy20@jhu.edu/tpdn_unbind/tpdn_refactored/training.py:158: UserWarning: invalid index of a 0-dim tensor. This will be an error in PyTorch 0.5. Use tensor.item() to convert a 0-dim tensor to a Python number
  if this_loss.data[0] < best_loss:
/scratch/users/rmccoy20@jhu.edu/tpdn_unbind/tpdn_refactored/models.py:244: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  output = self.softmax(self.out(output[0])) # Pass the result through softmax to make it probabilities
/scratch/users/rmccoy20@jhu.edu/tpdn_unbind/tpdn_refactored/training.py:158: UserWarning: invalid index of a 0-dim tensor. This will be an error in PyTorch 0.5. Use tensor.item() to convert a 0-dim tensor to a Python number
  if this_loss.data[0] < best_loss:
/scratch/users/rmccoy20@jhu.edu/tpdn_unbind/tpdn_refactored/models.py:244: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  output = self.softmax(self.out(output[0])) # Pass the result through softmax to make it probabilities
/scratch/users/rmccoy20@jhu.edu/tpdn_unbind/tpdn_refactored/training.py:158: UserWarning: invalid index of a 0-dim tensor. This will be an error in PyTorch 0.5. Use tensor.item() to convert a 0-dim tensor to a Python number
  if this_loss.data[0] < best_loss:
